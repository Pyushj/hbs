language: node_js
sudo: false
node_js:
  - "0.8"
  - "0.10"
  - "4.9"
  - "6.17"
  - "8.17"
  - "10.22"
  - "12.18"
  - "14.6"
before_install:
  # Setup npm
  - "test $TRAVIS_NODE_VERSION != '0.8' || npm install -g npm@1.2.8000"
  - "npm config set shrinkwrap false"
  # Setup Node.js version-specific dependencies
  - |
    # eslint for linting
    # - remove on Node.js < 10
    if [[ "$(cut -d. -f1 <<< "$TRAVIS_NODE_VERSION")" -lt 10 ]]; then
      npm rm --slient --save-dev eslint
      npm rm --slient --save-dev eslint-plugin-markdown
    fi
  - |
    # mocha for testing
    # - use 2.x for Node.js < 0.10
    # - use 3.x for Node.js < 4
    # - use 5.x for Node.js < 6
    # - use 6.x for Node.js < 8
    if [[ "$(cut -d. -f1 <<< "$TRAVIS_NODE_VERSION")" -eq 0 && "$(cut -d. -f2 <<< "$TRAVIS_NODE_VERSION")" -lt 10 ]]; then
      npm install --save-dev mocha@2.5.3
    elif [[ "$(cut -d. -f1 <<< "$TRAVIS_NODE_VERSION")" -lt 4 ]]; then
      npm install --save-dev mocha@3.5.3
    elif [[ "$(cut -d. -f1 <<< "$TRAVIS_NODE_VERSION")" -lt 6 ]]; then
      npm install --save-dev mocha@5.2.0
    elif [[ "$(cut -d. -f1 <<< "$TRAVIS_NODE_VERSION")" -lt 8 ]]; then
      npm install --save-dev mocha@6.2.2
    fi
  - |
    # nyc for coverage
    # - remove for Node.js < 8
    if [[ "$(cut -d. -f1 <<< "$TRAVIS_NODE_VERSION")" -lt 8 ]]; then
      npm rm --silent --save-dev nyc
    fi
  - |
    # supertest for http calls
    # - use 1.1.0 for Node.js < 0.10
    # - use 2.0.0 for Node.js < 4
    # - use 3.4.2 for Node.js < 6
    if [[ "$(cut -d. -f1 <<< "$TRAVIS_NODE_VERSION")" -eq 0 && "$(cut -d. -f2 <<< "$TRAVIS_NODE_VERSION")" -lt 10 ]]; then
      npm install --save-dev supertest@1.1.0
    elif [[ "$(cut -d. -f1 <<< "$TRAVIS_NODE_VERSION")" -lt 4 ]]; then
      npm install --save-dev supertest@2.0.0
    elif [[ "$(cut -d. -f1 <<< "$TRAVIS_NODE_VERSION")" -lt 6 ]]; then
      npm install --save-dev supertest@3.4.2
    fi
script:
  # Run test script
  - |
    if npm -ps ls nyc | grep -q nyc; then
      npm run test-cov
    else
      npm test
    fi
  # Run linting
  - |
    if npm -ps ls eslint | grep -q eslint; then
      npm run lint
    fi
after_script:
  - |
    # Upload coverage to coveralls if exists
    if [[ -d .nyc_output ]]; then
      npm install --save-dev coveralls@2
      nyc report --reporter=text-lcov | coveralls
    fi
